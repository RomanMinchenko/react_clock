{"version":3,"sources":["Classes/OpenWatch.tsx","App.tsx","index.tsx"],"names":["OpenWatch","state","date","Date","toLocaleTimeString","timer","this","setInterval","setState","console","log","clearInterval","watch","props","mesuareOfTime","time","index1","index2","className","style","position","React","Component","App","isClockVisible","randomIndex","document","querySelector","addEventListener","newRandomIndex","i","y","Math","floor","random","RandomStyles","type","styles","backgroundColor","ReactDOM","render","getElementById"],"mappings":"sNAmBaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,WALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,MAAQE,aAAY,WACvB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAGjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAbP,kCAgBE,WACMI,KAAKD,OACPM,cAAcL,KAAKD,SAlBzB,oBAsBE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KACAU,EAAUN,KAAKO,MAAfD,MACFE,EAAgB,SAACC,EAAcC,EAAgBC,GAA/B,gBAAqDF,EAAKC,IAA1D,OAAoED,EAAKE,KAE/F,OACE,sBAAKC,UAAU,qBAAqBC,MAAOP,EAAMQ,SAAjD,UACE,sBAAMF,UAAU,cAAhB,SAA+BJ,EAAcZ,EAAM,EAAG,KACtD,sBAAMgB,UAAS,sBAAiBJ,EAAcZ,EAAM,EAAG,GAAK,IAAM,GAAK,YAAvE,eACA,sBAAMgB,UAAU,gBAAhB,SAAiCJ,EAAcZ,EAAM,EAAG,KACxD,sBAAMgB,UAAU,gBAAhB,SAAiCJ,EAAcZ,EAAM,EAAG,YAhChE,GAA+BmB,IAAMC,W,OCP/BC,E,4MACJtB,MAAQ,CACNuB,gBAAgB,EAChBC,YAAa,G,uDAGf,WAAqB,IAAD,WAClB,UAAAC,SAASC,cAAc,0BAAvB,SAA2CC,iBAAiB,SAAS,WACnE,EAAKpB,UAAS,SAACP,GACb,MAAO,CAAEuB,gBAAiBvB,EAAMuB,sBAIpC,UAAAE,SAASC,cAAc,+BAAvB,SAAgDC,iBAAiB,SAAS,WACxE,SAASC,EAAeC,GACtB,IAAMC,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,UAE1B,OAAIJ,IAAMC,EACDA,EAGFF,EAAeC,GAGxB,EAAKtB,UAAS,SAACP,GACb,MAAO,CAAEwB,YAAaI,EAAe5B,EAAMwB,sB,oBAKjD,WACE,MAAwCnB,KAAKL,MAArCuB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,YAClBb,EAAQuB,EAAaV,GAE3B,OACE,sBAAKP,UAAU,QAAf,UACE,wBACEkB,KAAK,SACLlB,UAAU,yBACVC,MAAOK,EAAiBZ,EAAMyB,OAAS,CAAEC,gBAAiB,SAH5D,SAMId,GACK,cAAC,EAAD,CAAWZ,MAAOA,MAG3B,wBAAQM,UAAU,sBAAsBkB,KAAK,SAA7C,sB,GA9CUf,IAAMC,WAoDTC,IC7DfgB,IAASC,OACP,cAAC,EAAD,IACAd,SAASe,eAAe,U","file":"static/js/main.639b64c9.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Position {\n  top: string;\n  left: string;\n}\n\ninterface Watch {\n  position: Position;\n}\n\ntype Props = {\n  watch: Watch;\n};\n\ntype State = {\n  date: string;\n};\n\nexport class OpenWatch extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timer: ReturnType<typeof setTimeout> | undefined;\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n    const { watch } = this.props;\n    const mesuareOfTime = (time: string, index1: number, index2: number) => `${time[index1]}${time[index2]}`;\n\n    return (\n      <div className=\"display__time time\" style={watch.position}>\n        <span className=\"time__hours\">{mesuareOfTime(date, 0, 1)}</span>\n        <span className={`time__colon${+mesuareOfTime(date, 6, 7) % 2 === 0 && '--hidden'}`}>:</span>\n        <span className=\"time__minutes\">{mesuareOfTime(date, 3, 4)}</span>\n        <span className=\"time__seconds\">{mesuareOfTime(date, 6, 7)}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { OpenWatch } from './Classes/OpenWatch';\nimport RandomStyles from './RandomStyles/RandomStyles.json';\n\ntype State = {\n  isClockVisible: boolean;\n  randomIndex: number;\n};\n\ntype Props = {};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: false,\n    randomIndex: 0,\n  };\n\n  componentDidMount() {\n    document.querySelector('.watch__display')?.addEventListener('click', () => {\n      this.setState((state) => {\n        return { isClockVisible: !state.isClockVisible };\n      });\n    });\n\n    document.querySelector('.watch__button-style')?.addEventListener('click', () => {\n      function newRandomIndex(i:number): number {\n        const y = Math.floor(Math.random() * 5);\n\n        if (i !== y) {\n          return y;\n        }\n\n        return newRandomIndex(i);\n      }\n\n      this.setState((state) => {\n        return { randomIndex: newRandomIndex(state.randomIndex) };\n      });\n    });\n  }\n\n  render() {\n    const { isClockVisible, randomIndex } = this.state;\n    const watch = RandomStyles[randomIndex];\n\n    return (\n      <div className=\"watch\">\n        <button\n          type=\"button\"\n          className=\"watch__display display\"\n          style={isClockVisible ? watch.styles : { backgroundColor: 'black' }}\n        >\n          {\n            isClockVisible\n              && <OpenWatch watch={watch} />\n          }\n        </button>\n        <button className=\"watch__button-style\" type=\"button\"> </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}